<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

<!--
        资源字典

保存了一些空间模板和样式
-->
    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F0F0F0" Offset="0.0"/>
        <GradientStop Color="#E5E5E5" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
    <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#ECF4FC" Offset="0.0"/>
        <GradientStop Color="#DCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0" x:Name="contentPresenter" Width="auto" ContentSource="Header" Focusable="False" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Border x:Name="Stick" Grid.Row="1" BorderBrush="Gray" Margin="30 10 30 0" Height="4" BorderThickness="2" CornerRadius="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="Gray"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.2" To="30 0 30 0 " From="30 10 30 0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Stick"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.2" To="30 10 30 0 " From="30 0 30 0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Stick"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="auto"/>
                        </Grid.ColumnDefinitions> 
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckChange" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Margin="5,0,5,0"
                                Background="{TemplateBinding Background}" 
                                BorderThickness="2,2,2,2" BorderBrush="LightGray"
                                SnapsToDevicePixels="true" 
                                CornerRadius="3,3,3,3">

                        <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="3,1,3,3" 
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="char" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="63.2" CenterY="124.4"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Border.RenderTransform>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Bigger">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1.08"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1.08"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Smaller">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Bigger}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Smaller}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Phase0_Select_Button" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Width="180" Height="5" Margin="3 -57 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5 0" EndPoint="0.5 1">
                                    <GradientStop Color="White" Offset="1"/>
                                    <GradientStop Color="Transparent" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border> <!--上-->
                        <Border Width="180" Height="5" Margin="3 63 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5 0" EndPoint="0.5 1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>  <!--下-->
                        <Border Width="5" Height="55" Margin="-182 3 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0 0.5" EndPoint="1 0.5">
                                    <GradientStop Color="White" Offset="1"/>
                                    <GradientStop Color="Transparent" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border> <!--左-->
                        <Border Width="5" Height="55" Margin="188 3 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0 0.5" EndPoint="1 0.5">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>  <!--右-->
                        <Border Width="5" Height="5" Margin="-182 -57 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="1 1" GradientOrigin="1 1" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border><!--左上-->
                        <Border Width="5" Height="5" Margin="-182 63 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="1 0" GradientOrigin="1 0" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border> <!--左下-->
                        <Border Width="5" Height="5" Margin="188 -57 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="0 1" GradientOrigin="0 1" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border> <!--右上-->
                        <Border Width="5" Height="5" Margin="188 63 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="0 0" GradientOrigin="0 0" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>  <!--右下-->
                        <Border Width="1.5" Height="55" Margin="181.5 3 0 0" Background="White"/><!--右补-->
                        <Border Width="180" Height="1.5" Margin="3 56.5 0 0" Background="White"/><!--右补-->

                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10">
                            <Grid Width="200" Height="70" Background="#EE222222">
                                <Image x:Name="PhasePicture" Source="\Resources\image\pharse\Stage_0.png" Margin="0 0 110 10" Width="80" Opacity="1"/>
                                <Image x:Name="PhasePicture_b" Source="\Resources\image\pharse\Stage_0_b.png" Margin="0 0 110 10" Width="80" Opacity="0"/>
                                <TextBlock x:Name="PhaseName" Text="初始" FontSize="25" Margin="60 0 0 15" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetName="PhasePicture" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetName="PhasePicture_b" Storyboard.TargetProperty="Opacity"/>
                                        <ColorAnimation Duration="0:0:0.2" From="White" To="#00c6ff" Storyboard.TargetName="PhaseName" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetName="PhasePicture" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetName="PhasePicture_b" Storyboard.TargetProperty="Opacity"/>
                                        <ColorAnimation Duration="0:0:0.2" From="#00c6ff" To="White" Storyboard.TargetName="PhaseName" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Phase1_Select_Button" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Width="180" Height="5" Margin="3 -57 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5 0" EndPoint="0.5 1">
                                    <GradientStop Color="White" Offset="1"/>
                                    <GradientStop Color="Transparent" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--上-->
                        <Border Width="180" Height="5" Margin="3 63 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5 0" EndPoint="0.5 1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--下-->
                        <Border Width="5" Height="55" Margin="-182 3 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0 0.5" EndPoint="1 0.5">
                                    <GradientStop Color="White" Offset="1"/>
                                    <GradientStop Color="Transparent" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--左-->
                        <Border Width="5" Height="55" Margin="188 3 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0 0.5" EndPoint="1 0.5">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--右-->
                        <Border Width="5" Height="5" Margin="-182 -57 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="1 1" GradientOrigin="1 1" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--左上-->
                        <Border Width="5" Height="5" Margin="-182 63 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="1 0" GradientOrigin="1 0" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--左下-->
                        <Border Width="5" Height="5" Margin="188 -57 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="0 1" GradientOrigin="0 1" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--右上-->
                        <Border Width="5" Height="5" Margin="188 63 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="0 0" GradientOrigin="0 0" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--右下-->
                        <Border Width="1.5" Height="55" Margin="181.5 3 0 0" Background="White"/>
                        <!--右补-->
                        <Border Width="180" Height="1.5" Margin="3 56.5 0 0" Background="White"/>
                        <!--右补-->

                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10">
                            <Grid Width="200" Height="70" Background="#EE222222">
                                <Image x:Name="PhasePicture" Source="\Resources\image\pharse\Stage_1.png" Margin="0 0 110 10" Width="80" Opacity="1"/>
                                <Image x:Name="PhasePicture_b" Source="\Resources\image\pharse\Stage_1_b.png" Margin="0 0 110 10" Width="80" Opacity="0"/>
                                <TextBlock x:Name="PhaseName" Text="精英一" FontSize="25" Margin="60 0 0 15" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetName="PhasePicture" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetName="PhasePicture_b" Storyboard.TargetProperty="Opacity"/>
                                        <ColorAnimation Duration="0:0:0.2" From="White" To="#00c6ff" Storyboard.TargetName="PhaseName" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetName="PhasePicture" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetName="PhasePicture_b" Storyboard.TargetProperty="Opacity"/>
                                        <ColorAnimation Duration="0:0:0.2" From="#00c6ff" To="White" Storyboard.TargetName="PhaseName" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Phase2_Select_Button" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Width="180" Height="5" Margin="3 -57 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5 0" EndPoint="0.5 1">
                                    <GradientStop Color="White" Offset="1"/>
                                    <GradientStop Color="Transparent" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--上-->
                        <Border Width="180" Height="5" Margin="3 63 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5 0" EndPoint="0.5 1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--下-->
                        <Border Width="5" Height="55" Margin="-182 3 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0 0.5" EndPoint="1 0.5">
                                    <GradientStop Color="White" Offset="1"/>
                                    <GradientStop Color="Transparent" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--左-->
                        <Border Width="5" Height="55" Margin="188 3 0 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0 0.5" EndPoint="1 0.5">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--右-->
                        <Border Width="5" Height="5" Margin="-182 -57 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="1 1" GradientOrigin="1 1" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--左上-->
                        <Border Width="5" Height="5" Margin="-182 63 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="1 0" GradientOrigin="1 0" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--左下-->
                        <Border Width="5" Height="5" Margin="188 -57 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="0 1" GradientOrigin="0 1" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--右上-->
                        <Border Width="5" Height="5" Margin="188 63 0 0">
                            <Border.Background>
                                <RadialGradientBrush Center="0 0" GradientOrigin="0 0" RadiusX="1" RadiusY="1">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!--右下-->
                        <Border Width="1.5" Height="55" Margin="181.5 3 0 0" Background="White"/>
                        <!--右补-->
                        <Border Width="180" Height="1.5" Margin="3 56.5 0 0" Background="White"/>
                        <!--右补-->

                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10">
                            <Grid Width="200" Height="70" Background="#EE222222">
                                <Image x:Name="PhasePicture" Source="\Resources\image\pharse\Stage_2.png" Margin="0 0 110 10" Width="80" Opacity="1"/>
                                <Image x:Name="PhasePicture_b" Source="\Resources\image\pharse\Stage_2_b.png" Margin="0 0 110 10" Width="80" Opacity="0"/>
                                <TextBlock x:Name="PhaseName" Text="精英二" FontSize="25" Margin="60 0 0 15" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetName="PhasePicture" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetName="PhasePicture_b" Storyboard.TargetProperty="Opacity"/>
                                        <ColorAnimation Duration="0:0:0.2" From="White" To="#00c6ff" Storyboard.TargetName="PhaseName" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetName="PhasePicture" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetName="PhasePicture_b" Storyboard.TargetProperty="Opacity"/>
                                        <ColorAnimation Duration="0:0:0.2" From="#00c6ff" To="White" Storyboard.TargetName="PhaseName" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height"  Value="30"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Margin="10 0 10 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Path x:Name="ball" HorizontalAlignment="Left" Margin="8,0,0,0" Height="14" Width="14" Fill="Black">
                            <Path.Data>
                                <EllipseGeometry RadiusX="7" RadiusY="7" Center="7 7"/>
                            </Path.Data>
                        </Path>
                        <Border x:Name="border" Grid.Column="0" Width="60" CornerRadius="13" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter x:Name="contentPresenter" Width="Auto" Content="{TemplateBinding Content}" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.2" To="38 0 0 0 " From="8 0 0 0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ball"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.2" To="8 0 0 0 " From="38 0 0 0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="ball"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextOnlyButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="CornflowerBlue"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Skin_Select_Button" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="350" Margin="0 30 30 0" Height="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Background="{Binding BorderColor}" Width="10" HorizontalAlignment="Left"/>
                        <Grid Grid.Column="1" Margin="0 2 0 2">
                            <Border Background="#333333"/>
                            <Image Source="{Binding Avatar}" Stretch="Uniform" Width="150" Height="150" Margin="10 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <Border Width="50" Margin="-100 0 0 0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                                        <GradientStop Color="#FF333333" Offset="0"/>
                                        <GradientStop Color="#00333333" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <TextBlock x:Name="Name" Text="{Binding Name}" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="185,0,0,0"/>
                            <Image Stretch="Uniform" Width="100" Height="100" Margin="259,19,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Opacity="{Binding Is_Select}" Source="pack://application:,,,/Resources/image/others/Charinfo_SkinSelect1.png"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                        <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Skill_DataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FF688CAF"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>